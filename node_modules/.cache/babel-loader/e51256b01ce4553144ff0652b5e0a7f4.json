{"ast":null,"code":"var _jsxFileName = \"/Users/tylerbarkey/Documents/GitHub/battleship/src/components/App.js\";\nimport React from 'react';\nimport '../styles/App.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { takeTurn } from '../game_logic/game_instance';\nimport { checkGameStatus } from '../game_logic/ship_methods';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const xvalue = useSelector(state => state.turn.x);\n  const yvalue = useSelector(state => state.turn.y);\n  const gameMessage = useSelector(state => state.turn.gameMessage);\n  console.log(state);\n\n  const handleXChange = event => {\n    dispatch({\n      type: 'UPDATECOORDINATEX',\n      payload: event.target.value\n    });\n  };\n\n  const handleYChange = event => {\n    dispatch({\n      type: 'UPDATECOORDINATEY',\n      payload: event.target.value\n    });\n  };\n\n  const handleClick = () => {\n    const val = takeTurn(state.players[state.turn.activePlayer], [parseInt(xvalue), parseInt(yvalue)], state.game.boards[state.turn.activePlayer].damage);\n    console.log(val);\n    let gameOver = checkGameStatus(state.players[state.turn.activePlayer], state.game.boards[state.turn.activePlayer].damage);\n    dispatch({\n      type: 'SHOT',\n      payload: {\n        coordinates: [parseInt(xvalue), parseInt(yvalue)],\n        id: state.turn.activePlayer\n      }\n    });\n    dispatch({\n      type: 'FIRE',\n      payload: !gameOver ? '' : gameOver\n    });\n\n    if (val.ship !== false) {\n      dispatch({\n        type: 'DAMAGE',\n        payload: {\n          id: state.turn.activePlayer,\n          coordinates: val.ship\n        }\n      });\n    }\n  };\n\n  const moves = state.game.boards[state.turn.activePlayer];\n  const shotlist = moves.locationsFired.map(coordinate => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"[\", coordinate[0], \",\", coordinate[1], \"]\"));\n  const list = moves.damage.map(coordinate => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"[\", coordinate[0], \",\", coordinate[1], \"]\"));\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'INITILIZE'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Initialize Game\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Battleship\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Player \", state.turn.activePlayer === 0 ? 2 : 1, \", pick your coordinates!\"), React.createElement(\"input\", {\n    value: xvalue,\n    onChange: handleXChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: yvalue,\n    onChange: handleYChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Fire\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, gameMessage), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Damage\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, list), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Shots Fired\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, shotlist));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/components/App.js"],"names":["React","useSelector","useDispatch","takeTurn","checkGameStatus","App","dispatch","state","xvalue","turn","x","yvalue","y","gameMessage","console","log","handleXChange","event","type","payload","target","value","handleYChange","handleClick","val","players","activePlayer","parseInt","game","boards","damage","gameOver","coordinates","id","ship","moves","shotlist","locationsFired","map","coordinate","list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,QAAuB,6BAAvB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,KAAK,GAAGN,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAMC,MAAM,GAAGP,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACE,IAAN,CAAWC,CAArB,CAA1B;AACA,QAAMC,MAAM,GAAGV,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACE,IAAN,CAAWG,CAArB,CAA1B;AACA,QAAMC,WAAW,GAAGZ,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACE,IAAN,CAAWI,WAArB,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AAEA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC/BX,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,mBAAN;AAA0BC,MAAAA,OAAO,EAACF,KAAK,CAACG,MAAN,CAAaC;AAA/C,KAAD,CAAR;AACC,GAFH;;AAGA,QAAMC,aAAa,GAAIL,KAAD,IAAW;AAC/BX,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,mBAAN;AAA0BC,MAAAA,OAAO,EAACF,KAAK,CAACG,MAAN,CAAaC;AAA/C,KAAD,CAAR;AACC,GAFH;;AAIE,QAAME,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAGrB,QAAQ,CAACI,KAAK,CAACkB,OAAN,CAAclB,KAAK,CAACE,IAAN,CAAWiB,YAAzB,CAAD,EAAwC,CAACC,QAAQ,CAACnB,MAAD,CAAT,EAAkBmB,QAAQ,CAAChB,MAAD,CAA1B,CAAxC,EAA4EJ,KAAK,CAACqB,IAAN,CAAWC,MAAX,CAAkBtB,KAAK,CAACE,IAAN,CAAWiB,YAA7B,EAA2CI,MAAvH,CAApB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA,QAAIO,QAAQ,GAAG3B,eAAe,CAACG,KAAK,CAACkB,OAAN,CAAclB,KAAK,CAACE,IAAN,CAAWiB,YAAzB,CAAD,EAAwCnB,KAAK,CAACqB,IAAN,CAAWC,MAAX,CAAkBtB,KAAK,CAACE,IAAN,CAAWiB,YAA7B,EAA2CI,MAAnF,CAA9B;AACAxB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,MAAN;AAAaC,MAAAA,OAAO,EAAC;AAACa,QAAAA,WAAW,EAAC,CAACL,QAAQ,CAACnB,MAAD,CAAT,EAAkBmB,QAAQ,CAAChB,MAAD,CAA1B,CAAb;AAAiDsB,QAAAA,EAAE,EAAC1B,KAAK,CAACE,IAAN,CAAWiB;AAA/D;AAArB,KAAD,CAAR;AACApB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,MAAN;AAAcC,MAAAA,OAAO,EAAE,CAACY,QAAF,GAAY,EAAZ,GAAeA;AAArC,KAAD,CAAR;;AACA,QAAGP,GAAG,CAACU,IAAJ,KAAa,KAAhB,EAAsB;AAAC5B,MAAAA,QAAQ,CAAC;AAACY,QAAAA,IAAI,EAAC,QAAN;AAAeC,QAAAA,OAAO,EAAC;AAACc,UAAAA,EAAE,EAAC1B,KAAK,CAACE,IAAN,CAAWiB,YAAf;AAA6BM,UAAAA,WAAW,EAACR,GAAG,CAACU;AAA7C;AAAvB,OAAD,CAAR;AAAqF;AAC7G,GAPD;;AASA,QAAMC,KAAK,GAAG5B,KAAK,CAACqB,IAAN,CAAWC,MAAX,CAAkBtB,KAAK,CAACE,IAAN,CAAWiB,YAA7B,CAAd;AACA,QAAMU,QAAQ,GAAKD,KAAK,CAACE,cAAN,CAAqBC,GAArB,CAA0BC,UAAD,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,UAAU,CAAC,CAAD,CAAhB,OAAsBA,UAAU,CAAC,CAAD,CAAhC,MAAxC,CAAnB;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACL,MAAN,CAAaQ,GAAb,CAAkBC,UAAD,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,UAAU,CAAC,CAAD,CAAhB,OAAsBA,UAAU,CAAC,CAAD,CAAhC,MAAhC,CAAb;AAEF,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAE,MAAIjC,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC;AAAN,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaX,KAAK,CAACE,IAAN,CAAWiB,YAAX,KAA0B,CAA3B,GAA8B,CAA9B,GAAgC,CAA5C,6BAHF,EAIE;AAAO,IAAA,KAAK,EAAElB,MAAd;AAAsB,IAAA,QAAQ,EAAEQ,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAO,IAAA,KAAK,EAAEL,MAAd;AAAsB,IAAA,QAAQ,EAAEW,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMI;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,WAAL,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK2B,IAAL,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,QAAL,CAXJ,CADF;AAgBD,CA7CD;;AA+CA,eAAe/B,GAAf","sourcesContent":["import React from 'react';\nimport '../styles/App.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {takeTurn} from '../game_logic/game_instance';\nimport {checkGameStatus} from '../game_logic/ship_methods';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const xvalue = useSelector((state)=>state.turn.x);\n  const yvalue = useSelector((state)=>state.turn.y);\n  const gameMessage = useSelector((state)=>state.turn.gameMessage);\n  console.log(state);\n\n  const handleXChange = (event) => {\n    dispatch({type:'UPDATECOORDINATEX',payload:event.target.value})\n    }\n  const handleYChange = (event) => {\n    dispatch({type:'UPDATECOORDINATEY',payload:event.target.value})\n    }\n\n    const handleClick = () => {\n      const val = takeTurn(state.players[state.turn.activePlayer],[parseInt(xvalue),parseInt(yvalue)],state.game.boards[state.turn.activePlayer].damage);\n      console.log(val);\n      let gameOver = checkGameStatus(state.players[state.turn.activePlayer],state.game.boards[state.turn.activePlayer].damage)\n      dispatch({type:'SHOT',payload:{coordinates:[parseInt(xvalue),parseInt(yvalue)],id:state.turn.activePlayer}});\n      dispatch({type:'FIRE', payload:(!gameOver)?'':gameOver});\n      if(val.ship !== false){dispatch({type:'DAMAGE',payload:{id:state.turn.activePlayer, coordinates:val.ship}})}\n    }\n\n    const moves = state.game.boards[state.turn.activePlayer];\n    const shotlist  =  moves.locationsFired.map((coordinate)=>(<li>[{coordinate[0]},{coordinate[1]}]</li>));\n    const list = moves.damage.map((coordinate)=>(<li>[{coordinate[0]},{coordinate[1]}]</li>));\n\n  return (\n    <div className=\"App\">\n    <button onClick={()=>dispatch({type:'INITILIZE'})}>Initialize Game</button>\n      <h1>Battleship</h1>\n      <h2>Player {(state.turn.activePlayer===0)?2:1}, pick your coordinates!</h2>\n      <input value={xvalue} onChange={handleXChange} />\n      <input value={yvalue} onChange={handleYChange} />\n        <button onClick={handleClick}>Fire</button>\n        <h2>{gameMessage}</h2>\n        <h2>Damage</h2>\n        <ul>{list}</ul>\n        <h2>Shots Fired</h2>\n        <ul>{shotlist}</ul>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}