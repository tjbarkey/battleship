{"ast":null,"code":"const initialState = {\n  counter: 0\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      () => {\n        newstate.counter = state.counter + 1;\n        return newstate;\n      };\n\n    case 'DECREMENT':\n      return state.counter - 1;\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/reducers/rootReducer.js"],"names":["initialState","counter","rootReducer","state","action","type","newstate"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC;AADW,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAsBI,MAAtB,KAAiC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AAAmB,YAAM;AAACC,QAAAA,QAAQ,CAACL,OAAT,GAAmBE,KAAK,CAACF,OAAN,GAAc,CAAjC;AACxB,eAAOK,QAAP;AAAiB,OADA;;AAEnB,SAAK,WAAL;AAAmB,aAAOH,KAAK,CAACF,OAAN,GAAc,CAArB;;AACnB;AAAU,aAAOE,KAAP;AAJZ;AAMD,CAPD;;AASA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  counter:0\n}\n\nconst rootReducer = (state = initialState,action) => {\n  switch(action.type){\n    case 'INCREMENT' : () => {newstate.counter = state.counter+1;\n      return(newstate)}\n    case 'DECREMENT' : return(state.counter-1);\n    default : return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}