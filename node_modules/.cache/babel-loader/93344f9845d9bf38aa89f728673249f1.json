{"ast":null,"code":"const createSpaces = () => {\n  const spaces = [];\n\n  for (let y = 0; y < 10; y++) {\n    for (let x = 0; x < 10; x++) {\n      spaces.push([x, y]);\n    }\n  }\n\n  return spaces;\n};\n\nconst initialState = {\n  boards: [{\n    id: 0,\n    spaces: createSpaces(),\n    locationsFired: [],\n    damage: []\n  }, {\n    id: 1,\n    spaces: createSpaces(),\n    locationsFired: [],\n    damage: []\n  }]\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INITILIZE':\n      return initialState;\n\n    case 'DAMAGE':\n      return state.boards[action.payload.id].damage.concat(action.payload.coordinates);\n\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/reducers/gameReducer.js"],"names":["createSpaces","spaces","y","x","push","initialState","boards","id","locationsFired","damage","gameReducer","state","action","type","payload","concat","coordinates"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,EAAhB,EAAqBA,CAAC,EAAtB,EAAyB;AACvB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAwB;AACtBF,MAAAA,MAAM,CAACG,IAAP,CAAY,CAACD,CAAD,EAAGD,CAAH,CAAZ;AACD;AACF;;AACD,SAAOD,MAAP;AACD,CARD;;AAUA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAAC;AACPC,IAAAA,EAAE,EAAC,CADI;AAEPN,IAAAA,MAAM,EAAED,YAAY,EAFb;AAGPQ,IAAAA,cAAc,EAAC,EAHR;AAIPC,IAAAA,MAAM,EAAC;AAJA,GAAD,EAKN;AACAF,IAAAA,EAAE,EAAC,CADH;AAEAN,IAAAA,MAAM,EAAED,YAAY,EAFpB;AAGAQ,IAAAA,cAAc,EAAC,EAHf;AAIAC,IAAAA,MAAM,EAAC;AAJP,GALM;AADW,CAArB;;AAmBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAwBO,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AAAmB,aAAOR,YAAP;;AACnB,SAAK,QAAL;AAAe,aAAOM,KAAK,CAACL,MAAN,CAAaM,MAAM,CAACE,OAAP,CAAeP,EAA5B,EAAgCE,MAAhC,CAAuCM,MAAvC,CAA8CH,MAAM,CAACE,OAAP,CAAeE,WAA7D,CAAP;;AACf;AAAU,aAAOL,KAAP;AAHZ;AAKD,CAND;;AAQA,eAAeD,WAAf","sourcesContent":["const createSpaces = () => {\n  const spaces = [];\n  for(let y=0 ; y<10 ; y++){\n    for(let x=0 ; x<10; x++){\n      spaces.push([x,y]);\n    }\n  }\n  return spaces;\n}\n\nconst initialState = {\n  boards: [{\n    id:0,\n    spaces: createSpaces(),\n    locationsFired:[],\n    damage:[]},\n    {\n    id:1,\n    spaces: createSpaces(),\n    locationsFired:[],\n    damage:[]\n  }]\n};\n\n\n\n\n\n\nconst gameReducer = (state = initialState , action) => {\n  switch(action.type){\n    case 'INITILIZE' : return initialState;\n    case 'DAMAGE': return state.boards[action.payload.id].damage.concat(action.payload.coordinates);\n    default : return state;\n  }\n}\n\nexport default gameReducer;\n"]},"metadata":{},"sourceType":"module"}