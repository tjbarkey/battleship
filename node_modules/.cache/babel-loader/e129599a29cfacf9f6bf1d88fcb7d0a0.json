{"ast":null,"code":"var _jsxFileName = \"/Users/tylerbarkey/Documents/GitHub/battleship/src/components/App.js\";\nimport React from \"react\";\nimport \"../styles/App.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { takeTurn, checkGameStatus } from \"../game_logic/game_instance\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const xvalue = useSelector(state => state.turn.x);\n  const yvalue = useSelector(state => state.turn.y);\n  const gameMessage = useSelector(state => state.turn.gameMessage);\n  console.log(state);\n\n  const handleXChange = event => {\n    dispatch({\n      type: \"UPDATECOORDINATEX\",\n      payload: event.target.value\n    });\n  };\n\n  const handleYChange = event => {\n    dispatch({\n      type: \"UPDATECOORDINATEY\",\n      payload: event.target.value\n    });\n  };\n\n  const handleClick = () => {\n    const val = takeTurn(state.players[state.turn.activePlayer], [parseInt(xvalue), parseInt(yvalue)], state.game.boards[state.turn.activePlayer].damage);\n    console.log(val);\n    dispatch({\n      type: \"SHOT\",\n      payload: {\n        coordinates: [parseInt(xvalue), parseInt(yvalue)],\n        id: state.turn.activePlayer\n      }\n    });\n\n    if (val.ship !== false) {\n      dispatch({\n        type: \"DAMAGE\",\n        payload: {\n          id: state.turn.activePlayer,\n          coordinates: val.ship\n        }\n      });\n    }\n\n    let gameOver = checkGameStatus(state.players[state.turn.activePlayer], state.game.boards[state.turn.activePlayer].damage);\n    dispatch({\n      type: \"FIRE\",\n      payload: !gameOver ? \"\" : gameOver\n    });\n  };\n\n  const moves = state.game.boards[state.turn.activePlayer];\n  const shotlist = moves.locationsFired.map(coordinate => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"[\", coordinate[0], \",\", coordinate[1], \"]\"));\n  const list = moves.damage.map(coordinate => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"[\", coordinate[0], \",\", coordinate[1], \"]\"));\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Battleship\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Player \", state.turn.activePlayer === 0 ? 2 : 1, \", pick your coordinates!\"), React.createElement(\"input\", {\n    value: xvalue,\n    onChange: handleXChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: yvalue,\n    onChange: handleYChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Fire\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, gameMessage), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Damage\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, list), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Shots Fired\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, shotlist));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/components/App.js"],"names":["React","useSelector","useDispatch","takeTurn","checkGameStatus","App","dispatch","state","xvalue","turn","x","yvalue","y","gameMessage","console","log","handleXChange","event","type","payload","target","value","handleYChange","handleClick","val","players","activePlayer","parseInt","game","boards","damage","coordinates","id","ship","gameOver","moves","shotlist","locationsFired","map","coordinate","list"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/App.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { takeTurn, checkGameStatus } from \"../game_logic/game_instance\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const xvalue = useSelector(state => state.turn.x);\n  const yvalue = useSelector(state => state.turn.y);\n  const gameMessage = useSelector(state => state.turn.gameMessage);\n  console.log(state);\n\n  const handleXChange = event => {\n    dispatch({ type: \"UPDATECOORDINATEX\", payload: event.target.value });\n  };\n  const handleYChange = event => {\n    dispatch({ type: \"UPDATECOORDINATEY\", payload: event.target.value });\n  };\n\n  const handleClick = () => {\n    const val = takeTurn(\n      state.players[state.turn.activePlayer],\n      [parseInt(xvalue), parseInt(yvalue)],\n      state.game.boards[state.turn.activePlayer].damage\n    );\n    console.log(val);\n    dispatch({\n      type: \"SHOT\",\n      payload: {\n        coordinates: [parseInt(xvalue), parseInt(yvalue)],\n        id: state.turn.activePlayer\n      }\n    });\n    if (val.ship !== false) {\n      dispatch({\n        type: \"DAMAGE\",\n        payload: { id: state.turn.activePlayer, coordinates: val.ship }\n      });\n    }\n    let gameOver = checkGameStatus(\n      state.players[state.turn.activePlayer],\n      state.game.boards[state.turn.activePlayer].damage\n    );\n    dispatch({ type: \"FIRE\", payload: !gameOver ? \"\" : gameOver });\n  };\n\n  const moves = state.game.boards[state.turn.activePlayer];\n  const shotlist = moves.locationsFired.map(coordinate => (\n    <li>\n      [{coordinate[0]},{coordinate[1]}]\n    </li>\n  ));\n  const list = moves.damage.map(coordinate => (\n    <li>\n      [{coordinate[0]},{coordinate[1]}]\n    </li>\n  ));\n\n  return (\n    <div className=\"App\">\n      <h1>Battleship</h1>\n      <h2>\n        Player {state.turn.activePlayer === 0 ? 2 : 1}, pick your coordinates!\n      </h2>\n      <input value={xvalue} onChange={handleXChange} />\n      <input value={yvalue} onChange={handleYChange} />\n      <button onClick={handleClick}>Fire</button>\n      <h2>{gameMessage}</h2>\n      <h2>Damage</h2>\n      <ul>{list}</ul>\n      <h2>Shots Fired</h2>\n      <ul>{shotlist}</ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}