{"ast":null,"code":"const checkForShip = (player, coordinates) => {\n  console.log(player.ships);\n  console.log(coordinates);\n\n  for (let i = 0; i < player.ships.length; i++) {\n    let ship = player.ships[i];\n    let shipPresent = ship.locations.filter(actualCoordinates => {\n      if (actualCoordinates[0] === parseInt(coordinates[0]) && actualCoordinates[1] === parseInt(coordinates[1])) {\n        return ship;\n      } else {\n        return false;\n      }\n    })[0];\n\n    if (shipPresent) {\n      return ship;\n    }\n  }\n\n  return false;\n};\n\nconst damageShip = (ship, coordinates) => {\n  //ship.damage.push(coordinates);\n  return coordinates;\n};\n\nconst fire = (player, coordinates) => {\n  const ship = checkForShip(player, coordinates);\n  console.log(ship);\n\n  if (ship) {\n    damageShip(ship, coordinates);\n    return coordinates;\n  } else {\n    return coordinates;\n  }\n};\n\nexport { checkForShip, damageShip, fire };","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/game_logic/ship_methods.js"],"names":["checkForShip","player","coordinates","console","log","ships","i","length","ship","shipPresent","locations","filter","actualCoordinates","parseInt","damageShip","fire"],"mappings":"AACA,MAAMA,YAAY,GAAG,CAACC,MAAD,EAAQC,WAAR,KAAsB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AACE,OAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,MAAM,CAACI,KAAP,CAAaE,MAA3B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,QAAIE,IAAI,GAACP,MAAM,CAACI,KAAP,CAAaC,CAAb,CAAT;AACA,QAAIG,WAAW,GAACD,IAAI,CAACE,SAAL,CAAeC,MAAf,CAAuBC,iBAAD,IAAqB;AAEzD,UAAIA,iBAAiB,CAAC,CAAD,CAAjB,KAAyBC,QAAQ,CAACX,WAAW,CAAC,CAAD,CAAZ,CAAlC,IAAwDU,iBAAiB,CAAC,CAAD,CAAjB,KAAuBC,QAAQ,CAACX,WAAW,CAAC,CAAD,CAAZ,CAA1F,EAA4G;AAC1G,eAAOM,IAAP;AAED,OAHD,MAII;AAEF,eAAO,KAAP;AACD;AACF,KAVe,EAUb,CAVa,CAAhB;;AAYA,QAAGC,WAAH,EAAe;AAAC,aAAOD,IAAP;AAAa;AAE9B;;AACD,SAAO,KAAP;AACH,CArBD;;AAuBA,MAAMM,UAAU,GAAG,CAACN,IAAD,EAAON,WAAP,KAAqB;AACpC;AACA,SAAOA,WAAP;AACH,CAHD;;AAKA,MAAMa,IAAI,GAAG,CAACd,MAAD,EAAQC,WAAR,KAAsB;AACjC,QAAMM,IAAI,GAAGR,YAAY,CAACC,MAAD,EAAQC,WAAR,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACE,MAAGA,IAAH,EAAQ;AACNM,IAAAA,UAAU,CAACN,IAAD,EAAMN,WAAN,CAAV;AACA,WAAOA,WAAP;AACD,GAHD,MAII;AAAC,WAAOA,WAAP;AAAoB;AAE5B,CATD;;AAcA,SAAQF,YAAR,EAAsBc,UAAtB,EAAkCC,IAAlC","sourcesContent":["\nconst checkForShip = (player,coordinates)=>{\n  console.log(player.ships);\n  console.log(coordinates);\n    for(let i=0;i<player.ships.length;i++){\n      let ship=player.ships[i];\n      let shipPresent=ship.locations.filter((actualCoordinates)=>{\n\n        if((actualCoordinates[0] === parseInt(coordinates[0])) && (actualCoordinates[1]===parseInt(coordinates[1]))){\n          return ship;\n\n        }\n        else{\n\n          return false;\n        }\n      })[0];\n\n      if(shipPresent){return ship;}\n\n    }\n    return false;\n}\n\nconst damageShip = (ship, coordinates)=>{\n    //ship.damage.push(coordinates);\n    return coordinates;\n}\n\nconst fire = (player,coordinates)=>{\n  const ship = checkForShip(player,coordinates);\n  console.log(ship);\n    if(ship){\n      damageShip(ship,coordinates)\n      return coordinates;\n    }\n    else{return coordinates;}\n\n}\n\n\n\n\nexport {checkForShip, damageShip, fire};\n"]},"metadata":{},"sourceType":"module"}