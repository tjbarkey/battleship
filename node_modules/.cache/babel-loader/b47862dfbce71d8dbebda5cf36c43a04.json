{"ast":null,"code":"const createSpaces = () => {\n  const spaces = [];\n\n  for (let y = 0; y < 10; y++) {\n    for (let x = 0; x < 10; x++) {\n      spaces.push([x, y]);\n    }\n  }\n\n  return spaces;\n};\n\nconst initialState = {\n  boards: [{\n    id: 0,\n    spaces: createSpaces(),\n    locationsFired: [],\n    damage: []\n  }, {\n    id: 1,\n    spaces: createSpaces(),\n    locationsFired: [],\n    damage: []\n  }]\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INITILIZE':\n      return initialState;\n\n    case 'DAMAGE':\n      const newboards = [...state.boards];\n      newboards[action.payload.id].damage.push(action.payload.coordinates);\n      console.log(newboards);\n      console.log(newboards[1].damage);\n      return Object.assign({}, state, {\n        game: [newboards]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/reducers/gameReducer.js"],"names":["createSpaces","spaces","y","x","push","initialState","boards","id","locationsFired","damage","gameReducer","state","action","type","newboards","payload","coordinates","console","log","Object","assign","game"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,EAAhB,EAAqBA,CAAC,EAAtB,EAAyB;AACvB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAwB;AACtBF,MAAAA,MAAM,CAACG,IAAP,CAAY,CAACD,CAAD,EAAGD,CAAH,CAAZ;AACD;AACF;;AACD,SAAOD,MAAP;AACD,CARD;;AAUA,MAAMI,YAAY,GAAG;AAACC,EAAAA,MAAM,EAAC,CAC3B;AACEC,IAAAA,EAAE,EAAC,CADL;AAEEN,IAAAA,MAAM,EAAED,YAAY,EAFtB;AAGEQ,IAAAA,cAAc,EAAC,EAHjB;AAIEC,IAAAA,MAAM,EAAC;AAJT,GAD2B,EAM3B;AACEF,IAAAA,EAAE,EAAC,CADL;AAEEN,IAAAA,MAAM,EAAED,YAAY,EAFtB;AAGEQ,IAAAA,cAAc,EAAC,EAHjB;AAIEC,IAAAA,MAAM,EAAC;AAJT,GAN2B;AAAR,CAArB;;AAmBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAwBO,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AAAmB,aAAOR,YAAP;;AACnB,SAAK,QAAL;AAAgB,YAAMS,SAAS,GAAC,CAAC,GAAGH,KAAK,CAACL,MAAV,CAAhB;AACdQ,MAAAA,SAAS,CAACF,MAAM,CAACG,OAAP,CAAeR,EAAhB,CAAT,CAA6BE,MAA7B,CAAoCL,IAApC,CAAyCQ,MAAM,CAACG,OAAP,CAAeC,WAAxD;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAAC,CAAD,CAAT,CAAaL,MAAzB;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC5BU,QAAAA,IAAI,EAAE,CACJP,SADI;AADsB,OAAzB,CAAP;;AAMA;AAAU,aAAOH,KAAP;AAZZ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["const createSpaces = () => {\n  const spaces = [];\n  for(let y=0 ; y<10 ; y++){\n    for(let x=0 ; x<10; x++){\n      spaces.push([x,y]);\n    }\n  }\n  return spaces;\n}\n\nconst initialState = {boards:[\n  {\n    id:0,\n    spaces: createSpaces(),\n    locationsFired:[],\n    damage:[]},\n  {\n    id:1,\n    spaces: createSpaces(),\n    locationsFired:[],\n    damage:[]\n  }\n]};\n\n\n\n\n\n\nconst gameReducer = (state = initialState , action) => {\n  switch(action.type){\n    case 'INITILIZE' : return initialState;\n    case 'DAMAGE' : const newboards=[...state.boards];\n      newboards[action.payload.id].damage.push(action.payload.coordinates);\nconsole.log(newboards);\nconsole.log(newboards[1].damage);\n    return Object.assign({}, state, {\n        game: [\n          newboards\n        ]\n      })\n\n    default : return state;\n  }\n}\n\nexport default gameReducer;\n"]},"metadata":{},"sourceType":"module"}