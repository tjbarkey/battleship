{"ast":null,"code":"const initialState = {\n  counter: 0\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return Object.assign({}, state, {\n        counter: state.counter + 1\n      });\n\n    case 'DECREMENT':\n      return state.counter - 1;\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/tylerbarkey/Documents/GitHub/battleship/src/reducers/rootReducer.js"],"names":["initialState","counter","rootReducer","state","action","type","Object","assign"],"mappings":"AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC;AADW,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAwBI,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AACA,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAc;AADO,OAAzB,CAAP;;AAEA,SAAK,WAAL;AAAmB,aAAOE,KAAK,CAACF,OAAN,GAAc,CAArB;;AACnB;AAAU,aAAOE,KAAP;AALZ;AAOD,CARD;;AAUA,eAAeD,WAAf","sourcesContent":["\n\nconst initialState = {\n  counter:0\n}\n\nconst rootReducer = (state = initialState , action) => {\n  switch(action.type){\n    case 'INCREMENT' :\n    return Object.assign({}, state, {\n      counter: state.counter+1});\n    case 'DECREMENT' : return(state.counter-1);\n    default : return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}